#Если Клиент Тогда

//////////////////////////////////////////////////////////////////////////////////
//// ПЕРЕМЕННЫЕ МОДУЛЯ

#КонецЕсли

#Если Сервер Тогда

//////////////////////////////////////////////////////////////////////////////////
//// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ (НА СЕРВЕРЕ)


//////////////////////////////////////////////////////////////////////////////////
//// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ (НА СЕРВЕРЕ БЕЗ КОНТЕКСТА)

#КонецЕсли

#Если Клиент Тогда

//////////////////////////////////////////////////////////////////////////////////
//// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ (НА КЛИЕНТЕ)

//////////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНД

#КонецЕсли

#Если Сервер Тогда

//////////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ СЕРВЕР

#КонецЕсли

#Если Клиент Тогда

//////////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ КЛИЕНТ

//добавляем новую строку (через открытие отдельной формы)
&НаКлиенте
Процедура ОпытРаботыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	ФормаОпытРаботы = ПолучитьФорму("Справочник.Резюме.Форма.ФормаОпытРаботы",,ЭтаФорма);
	СтруктураПараметров = ФормаОпытРаботы.ОткрытьМодально();
	
	Если СтруктураПараметров<>НЕопределено Тогда
		НовСтр = Объект.ОпытРаботы.Добавить();
		НовСтр.НачалоДеятельности = СтруктураПараметров.НачалоДеятельности;
		НовСтр.ОкончаниеДеятельности = СтруктураПараметров.ОкончаниеДеятельности;
		НовСтр.Организация = СтруктураПараметров.Организация;
		НовСтр.Должность = СтруктураПараметров.Должность;
		НовСтр.Обязанности = СтруктураПараметров.Обязанности;
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпытРаботыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекД = Элемент.ТекущиеДанные;
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("НачалоДеятельности",ТекД.НачалоДеятельности);
	СтруктураПараметров.Вставить("ОкончаниеДеятельности",ТекД.ОкончаниеДеятельности);
	СтруктураПараметров.Вставить("Организация",ТекД.Организация);
	СтруктураПараметров.Вставить("Должность",ТекД.Должность);
	СтруктураПараметров.Вставить("Обязанности",ТекД.Обязанности);
	СтруктураПараметров.Вставить("СфераДеятельностиОрганизации",ТекД.СфераДеятельностиОрганизации);
	
	
    ФормаОпытРаботы = ПолучитьФорму("Справочник.Резюме.Форма.ФормаОпытРаботы",СтруктураПараметров,ЭтаФорма);
	СтруктураПараметров = ФормаОпытРаботы.ОткрытьМодально();
	Если СтруктураПараметров<>НЕопределено Тогда
	
		ТекД.НачалоДеятельности = СтруктураПараметров.НачалоДеятельности;
		ТекД.ОкончаниеДеятельности = СтруктураПараметров.ОкончаниеДеятельности;
		ТекД.Организация = СтруктураПараметров.Организация;
		ТекД.Должность = СтруктураПараметров.Должность;
		ТекД.Обязанности = СтруктураПараметров.Обязанности;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры
	
//////////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ШАПКИ


//////////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОЙ ЧАСТИ <   >


////ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

#КонецЕсли

&НаКлиенте
Процедура ЗагрузитьИзображение(Команда)
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Если ДиалогОткрытияФайла.Выбрать() Тогда
	    МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
	Иначе
		Возврат;
	КонецЕсли;
	
	ЗагрузитьКартинкуНаСервере(МассивФайлов[0]);
	
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьКартинкуНаСервере(ПутьКФайлу)
	
	ОбъектСервер = ДанныеФормыВЗначение(Объект, Тип("СправочникОбъект.Резюме"));
	ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКФайлу);
	ОбъектСервер.Фото = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(0));
	ОбъектСервер.Записать();
	АдресКартинки = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	ЗначениеВДанныеФормы(ОбъектСервер, Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИзображение(Команда)
	ОчиститьИзображениеСервер();
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ОчиститьИзображениеСервер()
	ОбъектСервер = ДанныеФормыВЗначение(Объект, Тип("СправочникОбъект.Резюме"));
	ОбъектСервер.Фото = Неопределено;
	ОбъектСервер.Записать();
	АдресКартинки = "";
	ЗначениеВДанныеФормы(ОбъектСервер, Объект);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзображение(Команда)
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Фильтр = "JPEG-изображение(*.jpg)|*.jpg";
	ДиалогОткрытияФайла.Фильтр = Фильтр;	
	Если ДиалогОткрытияФайла.Выбрать() Тогда
	    МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
	Иначе
		Возврат;
	КонецЕсли;
	
	СохранитьИзображениеСервер(МассивФайлов[0]);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьИзображениеСервер(ПутьКФайлу)
	ОбъектСервер = ДанныеФормыВЗначение(Объект, Тип("СправочникОбъект.Резюме"));
	Картинка = ОбъектСервер.Фото.Получить();
	Если НЕ Картинка = Неопределено Тогда
		Картинка.Записать(ПутьКФайлу);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ОбновитьКартинку();
КонецПроцедуры

&НаСервере
Процедура ОбновитьКартинку()
	ОбъектСервер = ДанныеФормыВЗначение(Объект, Тип("СправочникОбъект.Резюме"));
	ДвоичныеДанные = ОбъектСервер.Фото.Получить();
	АдресКартинки = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
КонецПроцедуры
