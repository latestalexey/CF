

Процедура ОбработкаПроведения(Отказ, Режим)
	Попытка
		ДатаЗапрета = Константы.ДатаЗапретаРедактирования.Получить();
		Если ЗначениеЗаполнено(ДатаЗапрета) Тогда
			Если Дата <= ДатаЗапрета Тогда
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;

		//регитр БДР
		Если Кошелек.КредитнаяКарта И НЕ НеПроводитьОвер Тогда	
			Если ЗначениеЗаполнено(Кошелек.СтатьяКредитПолученный) Тогда
				//если статья кредита заполнена, то надо отразить взятие кредита в доходах
				ОбщийМодуль1Сервер.ДвижениеБДРФакт(
					Движения.БДР, 
					Кошелек.СтатьяКредитПолученный, 
					ОбщийМодуль1Сервер.ПолучитьСуммуВВалютеРегл(?(СуммыВТабЧасти, 
					ДоходыРасходы.Итог("Сумма")+ДоходыРасходы.Итог("ДопСумма")
					, Сумма), Валюта, Курс, Кратность), 
					Дата,,,,ЭтоПрогноз);
			Иначе
				Отказ = Истина;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Обязательно укажите статью для полученных кредитов в кошельке!");
							
			КонецЕсли;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		
		Если СуммыВТабЧасти Тогда
			Если ДетализацияПоНоменклатуре Тогда
			
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ТабЧасть.СтатьяДР КАК СтатьяДР,
				|	ТабЧасть.Номенклатура КАК Номенклатура,
				|	Шапка.Контрагент,
				|	СУММА(ТабЧасть.Сумма+ТабЧасть.ДопСумма) КАК Сумма,
				|	ТабЧасть.Проект
				|ИЗ
				|	Документ.РасходСредств.ДоходыРасходы КАК ТабЧасть
				|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходСредств КАК Шапка
				|		ПО (Шапка.Ссылка = ТабЧасть.Ссылка)
				|ГДЕ
				|	ТабЧасть.Ссылка = &Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	ТабЧасть.СтатьяДР,
				|	ТабЧасть.Номенклатура,
				|	Шапка.Контрагент,
				|	ТабЧасть.Проект";
		   		Выборка = Запрос.Выполнить().Выбрать();

				Пока Выборка.Следующий() Цикл
					Если Выборка.СтатьяДР=Справочники.СтатьиДоходовРасходов.ПустаяСсылка() Тогда
						Продолжить;
					КонецЕсли;
					ОбщийМодуль1Сервер.ДвижениеБДРФакт(Движения.БДР, 
						Выборка.СтатьяДР, 
						ОбщийМодуль1Сервер.ПолучитьСуммуВВалютеРегл(Выборка.Сумма, Валюта, Курс, Кратность), 
						Дата,
						Выборка.Номенклатура,
						Выборка.Контрагент,
						?(ЗначениеЗаполнено(Выборка.Проект) или Выборка.Проект<>Справочники.Проекты.ПустаяСсылка(),
						Выборка.проект, Проект),
						ЭтоПрогноз);
				КонецЦикла;
			Иначе
				//суммы в тч, детализации нет
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ТабЧасть.СтатьяДР КАК СтатьяДР,
				|	СУММА(ТабЧасть.Сумма+ТабЧасть.ДопСумма) КАК Сумма,
				|	ТабЧасть.Проект
				|ИЗ
				|	Документ.РасходСредств.ДоходыРасходы КАК ТабЧасть
				|ГДЕ
				|	ТабЧасть.Ссылка = &Ссылка
				|
				|СГРУППИРОВАТЬ ПО
				|	ТабЧасть.СтатьяДР,
				|	ТабЧасть.Проект";
				Выборка = Запрос.Выполнить().Выбрать();

				Пока Выборка.Следующий() Цикл
					Если Выборка.СтатьяДР=Справочники.СтатьиДоходовРасходов.ПустаяСсылка() Тогда
						Продолжить;
					КонецЕсли;
					ОбщийМодуль1Сервер.ДвижениеБДРФакт(Движения.БДР, 
						Выборка.СтатьяДР, 
						ОбщийМодуль1Сервер.ПолучитьСуммуВВалютеРегл(Выборка.Сумма, Валюта, Курс, Кратность), 
						Дата,,,
						?(ЗначениеЗаполнено(Выборка.Проект) или Выборка.Проект<>Справочники.Проекты.ПустаяСсылка(),
						Выборка.проект, Проект),
						ЭтоПрогноз);
				КонецЦикла;
	    	КонецЕсли;
		Иначе
			//суммы не в тч
			ОбщийМодуль1Сервер.ДвижениеБДРФакт(Движения.БДР, 
			СтатьяДР, 
			ОбщийМодуль1Сервер.ПолучитьСуммуВВалютеРегл(?(СуммыВТабЧасти, 
			ДоходыРасходы.Итог("Сумма")+ДоходыРасходы.Итог("ДопСумма")
			, Сумма), Валюта, Курс, Кратность), 
			Дата,,,Проект,ЭтоПрогноз);

		КонецЕсли;
		
		
		//прог 24 02 13. нельзя менять порядок. движение по РН ДенежныеСредства должно быть в самом конце!
		// регистр ДенежныеСредства Расход
		ОбщийМодуль1Сервер.ДвижениеДенежныхСредств(
					Движения.ДенежныеСредства, 
					ВидДвиженияНакопления.Расход, 
					Дата, 
					Кошелек, 
					?(СуммыВТабЧасти, 
					ДоходыРасходы.Итог("Сумма")+ДоходыРасходы.Итог("ДопСумма")
					, Сумма), 
					Валюта, Курс, Кратность, ЭтоПрогноз);
					
					
	Исключение
		ЗаписьЖурналаРегистрации("Ошибка проведения", УровеньЖурналаРегистрации.Ошибка, , ссылка, ОписаниеОшибки());
	КонецПопытки;	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если СуммыВТабЧасти Тогда
		
		Сумма=ДоходыРасходы.Итог("Сумма");
		
		Если ДетализацияПоНоменклатуре Тогда
			Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
				Отказ = Истина;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран контрагент!");
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ОбъектКопирования,,"Номер,Дата");	
КонецПроцедуры

Процедура ПриИзмененииКошелька() Экспорт

	Валюта = Кошелек.Валюта;
	КурсКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Валюта, Дата);
	Курс = КурсКратность.Курс;
	Кратность = КурсКратность.Кратность;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	//НеРегистрироватьВПланеОбмена = Неопределено;
	//ДополнительныеСвойства.Свойство("НеРегистрироватьВПланеОбмена", НеРегистрироватьВПланеОбмена);
	//Если НеРегистрироватьВПланеОбмена <> Истина Тогда //только сравнение с истиной!
	//	Узел = ПланыОбмена.ОбменСAndroid.НайтиПоКоду("02");
	//	Если Узел <> ПланыОбмена.ОбменСAndroid.ПустаяСсылка() Тогда
	//		ПланыОбмена.ЗарегистрироватьИзменения(Узел, Ссылка);
	//	КонецЕсли;
	//КонецЕсли;

	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Попытка
		Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
			Возврат
		КонецЕсли;
		Для Каждого Движение Из Движения Цикл
			Движение.Отбор.Регистратор.Установить(Ссылка);
			Движение.Очистить();
			Движение.Записать();
		КонецЦикла;
	Исключение
		ЗаписьЖурналаРегистрации("Ошибка удаления проведения", УровеньЖурналаРегистрации.Ошибка, , ссылка, ОписаниеОшибки());
	КонецПопытки;		
КонецПроцедуры


