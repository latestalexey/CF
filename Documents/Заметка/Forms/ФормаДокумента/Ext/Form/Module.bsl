


&НаКлиенте
Процедура ПересчетОднойСтрокиКлиент(ИмяКол)
	ТекСтр = Элементы.Расчет.ТекущиеДанные;
	
	Если Найти(ИмяКол,"Количество")>0 Тогда
		ТекСтр.Сумма = ТекСтр.Цена * ТекСтр.Количество;
	ИначеЕсли Найти(ИмяКол,"Цена")>0 Тогда
		ТекСтр.Сумма = ТекСтр.Цена * ТекСтр.Количество;
	ИначеЕсли Найти(ИмяКол,"Сумма")>0 Тогда
		ТекСтр.Цена = ?(ТекСтр.Количество=0,0,ТекСтр.Сумма / ТекСтр.Количество);
	ИначеЕсли Найти(ИмяКол,"Номенклатура")>0 Тогда
		ТекСтр.Сумма = ТекСтр.Цена * ТекСтр.Количество;
	ИначеЕсли Найти(ИмяКол,"ТипЦен")>0 Тогда
		ТекСтр.Сумма = ТекСтр.Цена * ТекСтр.Количество;
	
	КонецЕсли;
	
	если Объект.Кратность <> 0 Тогда
		ТекСтр.СуммаРегл = ТекСтр.Сумма * Объект.Курс/Объект.Кратность;
	Иначе
		ТекСтр.СуммаРегл = 0;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура РасчетКоличествоПриИзменении(Элемент)
	ПересчетОднойСтрокиКлиент(Элементы.Расчет.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура РасчетЦенаПриИзменении(Элемент)
	ПересчетОднойСтрокиКлиент(Элементы.Расчет.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура РасчетСуммаПриИзменении(Элемент)
	ПересчетОднойСтрокиКлиент(Элементы.Расчет.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоEMAIL(Команда)
	
	//это отправка чере общую форму РедактированиеНовогоПисьма
	//Адрес = ПолучитьАдресДляЗаметокПоУмолчанию();
	//Если Не ЗначениеЗаполнено(Адрес) Тогда
	//	Предупреждение("Не указан адрес для заметок по умолчанию!",60);
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыФормы = Новый Структура("УчетнаяЗапись,Кому,Вложения,УдалятьФайлыПослеОтправки,Тема,Тело,АдресОтвета,ТипТекста");
	//ПараметрыФормы.УчетнаяЗапись = Неопределено;
	//ПараметрыФормы.Кому = Адрес;
	//ПараметрыФормы.Вложения = Неопределено;
	//ПараметрыФормы.УдалятьФайлыПослеОтправки = Неопределено;
	//ПараметрыФормы.Тема = Объект.Тема;
	//
	////если есть расчет стоимости, то его тоже надо показать в письме
	//Если Объект.Расчет.Количество()>0 Тогда
	//	
	//	ПараметрыФормы.ТипТекста = "HTML";
	//	
	//	Тело = "<html><head>"+сокрлп(Объект.Тема)+"</head><body>";
	//	
	//	Тело = Тело + Объект.Содержание;
	//	
	//	Тело = Тело + Символы.ПС;
	//	Тело = Тело + "Расчет";
	//	Тело = Тело + Символы.ПС;
	//	
	//	//добавим таблицу
	//	
	//	Табл = "<table>";
	//	Табл = Табл + "<tr>";
	//	Табл = Табл + "<td>Номенклатура</td>";
	//	Табл = Табл + "<td>Количество</td>";
	//	Табл = Табл + "<td>Цена</td>";
	//	Табл = Табл + "<td>Сумма</td>";
	//	Табл = Табл + "<td>СтатьяДР</td>";
	//	Табл = Табл + "</tr>";
	//	
	//	Для Каждого Стр Из Объект.Расчет Цикл
	//		
	//		Табл = Табл + "<tr>";
	//		Табл = Табл + "<td>"+Стр.Номенклатура+"</td>";
	//		Табл = Табл + "<td>"+Стр.Количество+"</td>";
	//		Табл = Табл + "<td>"+Стр.Цена+"</td>";
	//		Табл = Табл + "<td>"+Стр.Сумма+"</td>";
	//		Табл = Табл + "<td>"+Стр.СтатьяДР+"</td>";
	//		Табл = Табл + "</tr>";
	//		
	//	КонецЦикла;
	//	
	//	Табл = Табл + "</table>";
	//	
	//	Тело = Тело + Табл;
	//	
	//	Тело = Тело + "</body></html>";
	//	
	//Иначе//нет таблицы расчета
	//	
	//	Тело = Объект.Содержание;
	//	
	//КонецЕсли;
	//
	//ПараметрыФормы.Тело = Тело;
	//
	//ПараметрыФормы.АдресОтвета = Адрес;
	//Рез = ОткрытьФорму("ОбщаяФорма.РедактированиеНовогоПисьма",ПараметрыФормы);
	
	//отправка непосредственно из заметки
	Адрес = ПолучитьАдресДляЗаметокПоУмолчанию();
	Если Не ЗначениеЗаполнено(Адрес) Тогда
		Предупреждение("Не указан адрес для заметок по умолчанию!",60);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("УчетнаяЗапись,Кому,Вложения,УдалятьФайлыПослеОтправки,Тема,Тело,ТипТекста");
	ПараметрыФормы.УчетнаяЗапись = Неопределено;
	ПараметрыФормы.Кому = Адрес;
	ПараметрыФормы.Вложения = Неопределено;
	ПараметрыФормы.УдалятьФайлыПослеОтправки = Неопределено;
	ПараметрыФормы.Тема = Объект.Тема;
	
	//если есть расчет стоимости, то его тоже надо показать в письме
	Если Объект.Расчет.Количество()>0 Тогда
		
		ПараметрыФормы.ТипТекста = "HTML";
		
		Тело = "<html><head>"+сокрлп(Объект.Тема)+"</head><body>";
		
		Тело = Тело + Объект.Содержание;
		
		Тело = Тело + "<br>";
		Тело = Тело + "Расчет";
		Тело = Тело + "<br>";
		
		//добавим таблицу
		
		Табл = "<table border=1>";
		Табл = Табл + "<tr>";
		Табл = Табл + "<td>Номенклатура</td>";
		Табл = Табл + "<td>Количество</td>";
		Табл = Табл + "<td>Цена</td>";
		Табл = Табл + "<td>Сумма</td>";
		Табл = Табл + "<td>СтатьяДР</td>";
		Табл = Табл + "</tr>";
		
		Для Каждого Стр Из Объект.Расчет Цикл
			
			Табл = Табл + "<tr>";
			Табл = Табл + "<td>"+Стр.Номенклатура+"</td>";
			Табл = Табл + "<td align=right>"+Стр.Количество+"</td>";
			Табл = Табл + "<td align=right>"+Стр.Цена+"</td>";
			Табл = Табл + "<td align=right>"+Стр.Сумма+"</td>";
			Табл = Табл + "<td>"+Стр.СтатьяДР+"</td>";
			Табл = Табл + "</tr>";
			
		КонецЦикла;
		
		Табл = Табл + "</table>";
		
		Тело = Тело + Табл;
		
		Тело = Тело + "</body></html>";
		
	Иначе//нет таблицы расчета
		
		//надо указать, потому что если в структуре есть этот параметр, но он не задан,
		//то 1С падает
		ПараметрыФормы.ТипТекста = "ПростойТекст";  
		Тело = Объект.Содержание;
		
	КонецЕсли;
	
	ПараметрыФормы.Тело = Тело;
	
	УчетнаяЗапись = ПолучитьУчетнуюЗаписьПочтыПоУмолчанию();
	Если УчетнаяЗапись <> Неопределено Тогда
		Рез = ЭлектроннаяПочта.ОтправитьСообщение(УчетнаяЗапись,ПараметрыФормы);
	КонецЕсли;
	
	Если Рез <> Неопределено Тогда
		Предупреждение("Сообщение успешно отправлено!",60);
	Иначе
		Предупреждение("Не удалось отправить сообщение!",60);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьУчетнуюЗаписьПочтыПоУмолчанию()

	ДоступныеУчетныеЗаписи = ЭлектроннаяПочта.ПолучитьДоступныеУчетныеЗаписи(Истина);
	Если ДоступныеУчетныеЗаписи.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не обнаружены доступные учетные записи электронной почты, обратитесь к администратору системы.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Истина);
		Возврат Неопределено;
	КонецЕсли;
	Возврат ДоступныеУчетныеЗаписи[0].Ссылка;
	
КонецФункции // ПолучитьАдресДляЗаметокПоУмолчанию()



&НаСервереБезКонтекста
Функция ПолучитьАдресДляЗаметокПоУмолчанию()

	Возврат Константы.EmailДляЗаметок.Получить();	

КонецФункции // ПолучитьАдресДляЗаметокПоУмолчанию()



&НаСервереБезКонтекста
Функция ПолучитьЦенуНоменклатурыСервер(Номенклатура, ТипЦен, Период)

		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ЦеныНоменклатурыСрезПоследних.Цена
	//	|ИЗ
	//	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	//	|			&Период,
	//	|			Номенклатура = &Номенклатура
	//	|				И ТипЦен = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних";

	//Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	//Запрос.УстановитьПараметр("Период", Период);
	//Запрос.УстановитьПараметр("ТипЦен", ТипЦен);

	//Результат = Запрос.Выполнить();

	//ВыборкаДетальныеЗаписи = Результат.Выбрать();

	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	Возврат ВыборкаДетальныеЗаписи.Цена;
	//КонецЦикла;

	Возврат 0;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


КонецФункции 

&НаКлиенте
Процедура ЗаполнитьЦену()
	
	Если ЗначениеЗаполнено(Элементы.Расчет.ТекущиеДанные.ТипЦенТ) Тогда
		ТипЦен = Элементы.Расчет.ТекущиеДанные.ТипЦенТ;
	Иначе
		ТипЦен = Объект.ТипЦен;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТипЦен) Тогда
		Возврат;
	КонецЕсли;

	ПересчетОднойСтрокиКлиент(Элементы.Расчет.ТекущийЭлемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетНоменклатура1ПриИзменении(Элемент)
	ЗаполнитьЦену();
КонецПроцедуры

&НаКлиенте
Процедура РасчетТипЦенТПриИзменении(Элемент)
	
	ЗаполнитьЦену();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЦенПриИзменении(Элемент)
	ПересчетТабличнойЧастиСервер();
КонецПроцедуры

// <Описание процедуры>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура ПересчетТабличнойЧастиСервер()


	Для Каждого Стр Из Объект.Расчет Цикл
		
		Если ЗначениеЗаполнено(Стр.ТипЦенТ) Тогда
			ТипЦен = Стр.ТипЦенТ;
		Иначе
			ТипЦен = Объект.ТипЦен;
		КонецЕсли;
		
		Стр.Цена = ПолучитьЦенуНоменклатурыСервер(Стр.Номенклатура,
				ТипЦен,
				Объект.Дата);

		Стр.Сумма = Стр.Цена*Стр.Количество;
		
	КонецЦикла;

КонецПроцедуры // ПересчетТабличнойЧастиСервер()

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	Курсы = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Объект.Валюта, Объект.Дата);
	Объект.Курс = Курсы.Курс;
	Объект.Кратность = Курсы.Кратность;
КонецПроцедуры

&НаКлиенте
Процедура КурсПриИзменении(Элемент)
	ПересчетОднойСтрокиКлиент(Элементы.Расчет.ТекущийЭлемент.Имя);
	Для Каждого Стр Из Объект.Расчет Цикл
		
		Стр.СуммаРегл = Стр.Сумма*Объект.Курс/Объект.Кратность;
	КонецЦикла;
	
КонецПроцедуры
