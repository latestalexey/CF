
Функция ИмяМесяцаПоНомеру(НомерМесяца) Экспорт

	Если НомерМесяца = 1 Тогда
		Возврат "Январь";
	ИначеЕсли НомерМесяца = 2 Тогда
		Возврат "Февраль";
	ИначеЕсли НомерМесяца = 3 Тогда
		Возврат "Март";
	ИначеЕсли НомерМесяца = 4 Тогда
		Возврат "Апрель";
	ИначеЕсли НомерМесяца = 5 Тогда
		Возврат "Май";
	ИначеЕсли НомерМесяца = 6 Тогда
		Возврат "Июнь";
	ИначеЕсли НомерМесяца = 7 Тогда
		Возврат "Июль";
	ИначеЕсли НомерМесяца = 8 Тогда
		Возврат "Август";
	ИначеЕсли НомерМесяца = 9 Тогда
		Возврат "Сентябрь";
	ИначеЕсли НомерМесяца = 10 Тогда
		Возврат "Октябрь";
	ИначеЕсли НомерМесяца = 11 Тогда
		Возврат "Ноябрь";
	ИначеЕсли НомерМесяца = 12 Тогда
		Возврат "Декабрь";
	Иначе
		Возврат "";
		
	КонецЕсли;	

КонецФункции // ИмяМесяцаПоНомеру()

Процедура ПечатьДереваРекурсивно(СтрокиДерева, СекцияСтрока, ТабДок, СекцияСтрокаВерт)
	
	Для Каждого Стр Из СтрокиДерева Цикл
		СекцияСтрока.Параметры.СтатьяДР = Стр.СтатьяДР;
		Если Стр.ЭтоГруппа Тогда
			СекцияСтрока.ТекущаяОбласть.Шрифт = Новый Шрифт(,,Истина);
		Иначе	
			СекцияСтрока.ТекущаяОбласть.Шрифт = Новый Шрифт(,,Ложь);
		КонецЕсли;	
		ТабДок.Вывести(СекцияСтрока, Стр.Уровень());
		
		Для сч = 1 по 13 Цикл
			СекцияСтрокаВерт.Параметры.ПечПлан = Стр["План"+Строка(сч)];
			СекцияСтрокаВерт.Параметры.ПечФакт = Стр["Факт"+Строка(сч)];
			СекцияСтрокаВерт.Параметры.ПечВып = Стр["Рез"+Строка(сч)];
			
			ТабДок.Присоединить(СекцияСтрокаВерт);
		КонецЦикла;
		
		ПечатьДереваРекурсивно(Стр.Строки, СекцияСтрока, ТабДок, СекцияСтрокаВерт)
		
	КонецЦикла;
	
КонецПроцедуры

//вызывается из модуля формы документа (из серверной процедуры)
Процедура ПечатьБДРМоя(ТабДок, ПараметрКоманды) Экспорт

	Макет = Документы.БюджетГод.ПолучитьМакет("БДР");
	Ссылка = ПараметрКоманды.Ссылка;

	ДеревоБДРФорма = ОбщийМодуль1Сервер.СоздатьДеревоБДР();
		
	ОбщийМодуль1Сервер.ЗаполнитьДеревоБДРПриОткрытииСуществующегоДокументаСервер(Ссылка, ДеревоБДРФорма, Истина);
	
	//здесь у нас есть полностью заполненное и рассчитанное дерево
	
	Шапка = Макет.ПолучитьОбласть("Шапка|Начало");
	Загол = Макет.ПолучитьОбласть("Загол|Начало");
	СекцияСтрока = Макет.ПолучитьОбласть("Строка|Начало");
	
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	
	//Шапка.Параметры.Заполнить(Выборка);
	ТабДок.Вывести(Шапка);
	
	ТабДок.Вывести(Загол);
	
	ЗаголВерт = Макет.ПолучитьОбласть("Загол|Верт");
	Для сч = 1 по 12 Цикл
		ЗаголВерт.Параметры.Мес = ИмяМесяцаПоНомеру(сч);
		ТабДок.Присоединить(ЗаголВерт);
	КонецЦикла;
	//итоги
	ЗаголВерт.Параметры.Мес = "ИТОГО";
	ТабДок.Присоединить(ЗаголВерт);
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	ТабДок.НачатьАвтогруппировкуСтрок ();
	
	СтрокаВерт = Макет.ПолучитьОбласть("Строка|Верт");
	ПечатьДереваРекурсивно(ДеревоБДРФорма.Строки, СекцияСтрока, ТабДок, СтрокаВерт);
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок ();
	
КонецПроцедуры






&НаСервере
Процедура ВремТаблПлан(Запрос) Экспорт

	стрПлан32		= ",ЕстьNULL(БДР.План1,0)";
	стрПлан			= ",ЕстьNULL(БДР.План1,0) КАК План1";
	Для сч 			= 2 по 31 Цикл
		стрПлан32 	= стрПлан32+"+ЕстьNULL(БДР.План"+сч+",0)";
		стрПлан 	= стрПлан+"
		|,ЕстьNULL(БДР.План"+сч+",0) КАК План"+сч;
	КонецЦикла;
		
	Запрос.Текст= "ВЫБРАТЬ
	              |	Спр.Ссылка КАК СтатьяДР
	              |	"+стрПлан+"
	              | "+стрПлан32+" КАК План32
				  |ПОМЕСТИТЬ ВТПлан
	              |ИЗ
				  |Справочник.СтатьиДоходовРасходов КАК Спр
	              | Левое соединение Документ.БюджетМесяц.БДР КАК БДР
				  |	ПО БДР.СтатьяДР = Спр.Ссылка
				  | И БДР.Ссылка = &Ссылка
				  |ИНДЕКСИРОВАТЬ ПО СтатьяДР";
		
	Запрос.Выполнить();
	
	//для отладки
	
	//	Запрос.Текст= "ВЫБРАТЬ
	//			  |	Спр.Ссылка КАК СтатьяДР,
	//			  | &Ссылка КАК БюджетМес
	//			  |	"+стрПлан+"
	//			  | "+стрПлан32+" КАК План32
	//			  |ИЗ
	//			  |Справочник.СтатьиДоходовРасходов КАК Спр
	//			  | Левое соединение Документ.БюджетМесяц.БДР КАК БДР
	//			  |	ПО БДР.СтатьяДР = Спр.Ссылка
	//			  | И БДР.Ссылка = &Ссылка";
	//	
	//ТЗЗЗЗЗЗЗЗ=Запрос.Выполнить().Выгрузить();	

КонецПроцедуры // ВремТаблПлан()

&НаСервере
Процедура ВремТаблФакт(Запрос) Экспорт

	стрФакт			= "";
	Для сч 			= 1 по 31 Цикл
		стрФакт		= стрФакт + "
					|			,Выбор Когда День(Рег.Период)="+сч+" Тогда
					|				Рег.СуммаФактОборот 
					|			Иначе 0
					|			Конец КАК Факт"+сч;
	КонецЦикла;
		
	Запрос.Текст= "ВЫБРАТЬ
	              |	Рег.СтатьяДоходовРасходов КАК СтатьяДР
	              |	"+стрФакт+"
	              | ,Рег.СуммаФактОборот КАК Факт32
				  |ПОМЕСТИТЬ ВТФакт
	              |ИЗ
	              |	РегистрНакопления.БДР.Обороты(&НачПериода,&КонПериода,День) КАК Рег
				  |ИНДЕКСИРОВАТЬ ПО СтатьяДР";
				  
	Запрос.Выполнить();	

КонецПроцедуры // ВремТаблФакт()

&НаСервере
Процедура ВремТаблПланФакт(Запрос) Экспорт

	стрФакт="";
	стрПлан="";
	стрВТФакт="";
	стрВТПлан="";
	
	Для сч 			= 1 по 32 Цикл
		стрФакт		= стрФакт + "
					|			,Сумма(ВТ.Факт"+сч+") КАК Факт"+сч;
		стрПлан		= стрПлан + "
					|			,Сумма(ВТ.План"+сч+") КАК План"+сч;
					
		стрВТФакт = стрВТФакт+",Факт"+сч+" КАК Факт"+сч+",0 КАК План"+сч;
		стрВТПлан = стрВТПлан+",0 КАК Факт"+сч+",План"+сч+" КАК План"+сч;
	КонецЦикла;
		
	Запрос.Текст= "ВЫБРАТЬ
	              |	ВТ.СтатьяДР
	              |	"+стрФакт+"
				  |	"+стрПлан+"
				  |ПОМЕСТИТЬ ВТПланФакт
	              |ИЗ
	              |	(ВЫБРАТЬ
				  |  СтатьяДР
				  |"+стрВТПлан+"
				  |	ИЗ ВТПлан
				  |ОБЪЕДИНИТЬ ВСЕ
				  |	ВЫБРАТЬ
				  |	СтатьяДР
				  |"+стрВТФакт+"
				  | ИЗ ВТФакт
				  |) КАК ВТ
				  |	СГРУППИРОВАТЬ ПО
				  |ВТ.СтатьяДР
				  |ИНДЕКСИРОВАТЬ ПО СтатьяДР";
				  
	Запрос.Выполнить();	

КонецПроцедуры // ВремТаблФакт()



//вызывается из ЗаполнитьДеревоИзСправочникаСервер
//заполняет ДеревоБДР данными из справочника
&НаСервере
Процедура ЗаполнитьДеревоБДРРекурсивноСервер(Выборка, СтрокаДереваФормы) Экспорт
	
	Пока Выборка.Следующий() Цикл
		
		СтатьяДР = Выборка.СтатьяДР;
		
		//ЭтоГруппа = СтатьяДР.ЭтоГруппа;
		
		//Если (ЭтоГруппа) И (Выборка.Уровень()>0) И (СтрокаДереваФормы.СтатьяДР =  СтатьяДР) Тогда
		Если (Выборка.ЭтоГруппа) И (Выборка.Уровень()>0) И (СтрокаДереваФормы.СтатьяДР =  СтатьяДР) Тогда
			Продолжить;
		КонецЕсли;
		
		//24 06 11 проверка на пустые группы
		НоваяВыборка = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "СтатьяДР");
		Если Выборка.ЭтоГруппа Тогда
			Если НоваяВыборка.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		//24 06 11 проверка на пустые группы конец
		
		НовСтр 				= СтрокаДереваФормы.Строки.Добавить();
		НовСтр.СтатьяДР 	= СтатьяДР;
		НовСтр.ЭтоГруппа 	= Выборка.ЭтоГруппа;
		Для сч = 1 по 32 Цикл
			НовСтр["План"+сч]	= Выборка["План"+сч];
			НовСтр["Факт"+сч] 	= Выборка["Факт"+сч];
			//НовСтр["Факт"+сч] 	= Выборка["Факт"+сч];
			//НовСтр["Рез"+сч]  	= ?(Выборка["План"+сч] = 0, 0, Выборка["Факт"+сч]/Выборка["План"+сч]*100);
		КонецЦикла;
		
		ЗаполнитьДеревоБДРРекурсивноСервер(НоваяВыборка, НовСтр);
			
	КонецЦикла;
		
КонецПроцедуры

//полностью пересчитывает остатки в дереве
//начальный остаток уже должен быть в колонке План1
//заполняет начальный остаток в колонке Факт1
//выполняет пересчет всех остатков на начало и конец месяца
&НаСервере
Процедура ПересчитатьОстаткиВДеревеБДРСервер(ДеревоБДРФорма) Экспорт
	
	Если ДеревоБДРФорма.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	ПерваяСтрокаДерева 		= ДеревоБДРФорма.Строки[0];
	ПоследняяСтрокаДерева 	= ДеревоБДРФорма.Строки[ДеревоБДРФорма.Строки.Количество()-1];
	
	НачальныйОстаток 		= ПерваяСтрокаДерева["План1"];
	
	//заполним нач остаток
	//ДеревоБДРФорма.Строки[0]["План1"] = НачальныйОстаток;
	НачальныйОстатокПлан	= НачальныйОстаток;
	ПерваяСтрокаДерева["Факт1"] = НачальныйОстаток;
	//ПерваяСтрокаДерева["Рез1"] = 100;
	
	НачальныйОстатокФакт = НачальныйОстаток;
	
	Для счМес = 1 по 32 Цикл
		
		КонечныйОстатокПлан = НачальныйОстатокПлан;
		КонечныйОстатокФакт = НачальныйОстатокФакт;
		
		//обходим только уровень 0, глубже спускаться нет смысла
		Для Каждого Стр Из 	ДеревоБДРФорма.Строки Цикл
			//если в поле СтатьяДР находится строки, то это нач или кон остаток
			//эту строку надо пропустить
			Если ТипЗнч(Стр.СтатьяДР) = Тип("Строка") Тогда
				Продолжить;
			КонецЕсли;				
			КонечныйОстатокПлан = КонечныйОстатокПлан + Стр["План"+счМес]*Стр.ПриходРасход;
			КонечныйОстатокФакт = КонечныйОстатокФакт + Стр["Факт"+счМес]*Стр.ПриходРасход;
		КонецЦикла;
		
		//в последней строке находится кон остаток
		ПоследняяСтрокаДерева["План"+счМес] = КонечныйОстатокПлан; 
		ПоследняяСтрокаДерева["Факт"+счМес] = КонечныйОстатокФакт; 
		//14 07 11
		//ПоследняяСтрокаДерева["Рез"+счМес] = ?(КонечныйОстатокПлан=0,0,КонечныйОстатокФакт/КонечныйОстатокПлан*100); 
		
		//установим нач остаток на след месяц
		Если счМес<31 Тогда
			НачальныйОстатокПлан = КонечныйОстатокПлан;
			НачальныйОстатокФакт = КонечныйОстатокФакт;
			
			ПерваяСтрокаДерева["План"+(счМес+1)] = НачальныйОстатокПлан;
			ПерваяСтрокаДерева["Факт"+(счМес+1)] = НачальныйОстатокФакт;
			//14 07 11
			//ПерваяСтрокаДерева["Рез"+(счМес+1)] = ?(НачальныйОстатокПлан=0,0,НачальныйОстатокФакт/НачальныйОстатокПлан*100);
			
		ИначеЕсли счМес = 31 Тогда 
			//для Итогов нач ост берем из параметра процедуры - ост нач года
			ПерваяСтрокаДерева["План"+(счМес+1)] = НачальныйОстаток;
			ПерваяСтрокаДерева["Факт"+(счМес+1)] = НачальныйОстаток;
			//14 07 11
			//ПерваяСтрокаДерева["Рез"+(счМес+1)] = 100;
			
			НачальныйОстатокПлан = НачальныйОстаток;
			НачальныйОстатокФакт = НачальныйОстаток;
			
		КонецЕсли;
			
	КонецЦикла;	
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьСуществующийБюджет(Бюджет, ДеревоБДР) Экспорт

	Запрос 				= Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Бюджет.Ссылка);
	Запрос.УстановитьПараметр("НачПериода",НачалоМесяца(Бюджет.Дата));
	Запрос.УстановитьПараметр("КонПериода",КонецМесяца(Бюджет.Дата));
	Запрос.УстановитьПараметр("БюджетПлан",Бюджет.ГодовойБюджет);//для исключаемых статей
	Запрос.УстановитьПараметр("Исключать",ЗначениеЗаполнено(Бюджет.ГодовойБюджет));//для исключаемых статей
	
	
	МенеджерВТ 			= Новый МенеджерВременныхТаблиц();
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Если ЗначениеЗаполнено(Бюджет.ГодовойБюджет) Тогда
		ОбщийМодуль1Сервер.ВременнаяТаблицаИсключаемыеСтатьи(Запрос);
	КонецЕсли;
	Документы.БюджетМесяц.ВремТаблПлан(Запрос);
	Документы.БюджетМесяц.ВремТаблФакт(Запрос);
	Документы.БюджетМесяц.ВремТаблПланФакт(Запрос);
	
	стрФакт="";
	стрПлан="";
	Для сч 			= 1 по 32 Цикл
		стрФакт		= стрФакт + "
					|			,Сумма(ВТ.Факт"+сч+") КАК Факт"+сч;
		стрПлан		= стрПлан + "
					|			,Сумма(ВТ.План"+сч+") КАК План"+сч;
					
	КонецЦикла;
		
		Запрос.Текст   = "ВЫБРАТЬ
	                |	ВТ.СтатьяДР , Вт.СтатьяДР.ЭтоГруппа КАК ЭтоГруппа
					|"+стрФакт+"
					|"+стрПлан+"
	                |ИЗ
	                |	ВТПланФакт КАК ВТ "+?(ЗначениеЗаполнено(Бюджет.ГодовойБюджет),"
					|		ЛЕВОЕ СОЕДИНЕНИЕ ИсклСтатьи КАК Искл
					|		ПО (Искл.СтатьяДР = ВТ.СтатьяДР)
					|ГДЕ
					|	Искл.СтатьяДР ЕСТЬ NULL ", "")+"
	                |СГРУППИРОВАТЬ ПО
	                |	ВТ.СтатьяДР, Вт.СтатьяДР.ЭтоГруппа
	                |УПОРЯДОЧИТЬ ПО
	                |	ВТ.СтатьяДР.Порядок, ВТ.СтатьяДР.Наименование
	                |ИТОГИ ПО
	                |	ВТ.СтатьяДР ИЕРАРХИЯ";
	Выборка 			= Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "СтатьяДР");
	
	//заполним начальный остаток по всем дебетовым кошелькам, т.е. Наличные и Банк карта дебет
	НовСтр 				= ДеревоБДР.Строки.Добавить();
	НовСтр.СтатьяДР 	= "Нач. остаток";
	НовСтр.ЭтоГруппа 	= Истина;
	НовСтр["План1"] 	= Бюджет.НачальныйОстаток;
	НовСтр["Факт1"] 	= Бюджет.НачальныйОстаток;
	
	Документы.БюджетМесяц.ЗаполнитьДеревоБДРРекурсивноСервер(Выборка, ДеревоБДР);
	
	//вычислим конечный плановый остаток средств
	НовСтр 				= ДеревоБДР.Строки.Добавить();
	НовСтр.СтатьяДР 	= "Кон. остаток";
	НовСтр.ЭтоГруппа 	= Истина;
	
	Для Каждого Стр Из ДеревоБДР.Строки Цикл
		Если ТипЗнч(Стр.СтатьяДР) = Тип("Строка") Тогда
			Продолжить;
		КонецЕсли;
	
		Стр.ПриходРасход =  Стр.СтатьяДР.ЗнакДвижения;
	КонецЦикла;
	
	Документы.БюджетМесяц.ПересчитатьОстаткиВДеревеБДРСервер(ДеревоБДР);		

КонецПроцедуры


Процедура ЗаполнитьНовыйКопированием(Бюджет, ДеревоБДРФорма) Экспорт

	//это новый создан копированием	
	Запрос 				= Новый Запрос;
	
	стрПлан32=",БДР.План1";
	Для сч = 2 по 31 Цикл
		стрПлан32 = стрПлан32+"+БДР.План"+сч;
	КонецЦикла;
		
	ТекстЗапроса  = "ВЫБРАТЬ
	|	спр.Ссылка КАК статьяДР,
	|	спр.ЭтоГруппа КАК ЭтоГруппа";
	Для сч = 1 по 32 Цикл
		ТекстЗапроса  = ТекстЗапроса + " ,СУММА(ВложенныйЗапрос.План"+сч+") КАК План"+сч+"
		|,0 КАК Факт"+сч;
	КонецЦикла;
	ТекстЗапроса  = ТекстЗапроса + "
    |ИЗ
    |	Справочник.СтатьиДоходовРасходов КАК спр
    |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
    |			БДР.СтатьяДР КАК СтатьяДР";
	Для сч = 1 по 31 Цикл
		ТекстЗапроса  = ТекстЗапроса + " ,БДР.План"+сч+" КАК План"+сч;
	КонецЦикла;
	ТекстЗапроса  = ТекстЗапроса + "
    | "+
	стрПлан32+" КАК План32
    |		ИЗ
    |			Документ.БюджетМесяц.БДР КАК БДР ГДЕ БДР.Ссылка = &Ссылка) КАК ВложенныйЗапрос
    |		ПО спр.Ссылка = ВложенныйЗапрос.СтатьяДР
    |
    |СГРУППИРОВАТЬ ПО
    |	спр.Ссылка,
	|	спр.ЭтоГруппа
    |
    |УПОРЯДОЧИТЬ ПО
    |	спр.Порядок, Спр.Наименование
    |ИТОГИ ПО
    |	статьяДР ИЕРАРХИЯ";
	

	Запрос.Текст 		= ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", Бюджет);
	Выборка 			= Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "СтатьяДР");
	
	//заполним начальный остаток по всем дебетовым кошелькам, т.е. Наличные и Банк карта дебет
	НовСтр 				= ДеревоБДРФорма.Строки.Добавить();
	НовСтр.СтатьяДР 	= "Нач. остаток";
	НовСтр.ЭтоГруппа 	= Истина;
	//НовСтр["План1"] 	= ОбщийМодуль1Сервер.ВернутьОстатокСредствСервер(НачалоМесяца(Объект.Дата));
	НовСтр["План1"] 	= Бюджет.НачальныйОстаток;
	
	Документы.БюджетМесяц.ЗаполнитьДеревоБДРРекурсивноСервер(Выборка, ДеревоБДРФорма);
	
	//вычислим конечный плановый остаток средств
	НовСтр 				= ДеревоБДРФорма.Строки.Добавить();
	НовСтр.СтатьяДР 	= "Кон. остаток";
	НовСтр.ЭтоГруппа 	= Истина;
	
	Для Каждого Стр Из ДеревоБДРФорма.Строки Цикл
		Если ТипЗнч(Стр.СтатьяДР) = Тип("Строка") Тогда
			Продолжить;
		КонецЕсли;
	
		Стр.ПриходРасход =  Стр.СтатьяДР.ЗнакДвижения;
	КонецЦикла;
	
	Документы.БюджетМесяц.ПересчитатьОстаткиВДеревеБДРСервер(ДеревоБДРФорма);	

КонецПроцедуры


Процедура ЗаполнитьНовый(ДеревоБДРФорма) Экспорт
 
	//это новый создан добавлением
	Запрос 				= Новый Запрос;
	
	ТекстЗапроса  = "ВЫБРАТЬ
    |	спр.Ссылка КАК статьяДР, спр.ЭтоГруппа КАК ЭтоГруппа";
	для сч = 1 по 32 цикл
		ТекстЗапроса = ТекстЗапроса+"
        |	,0 КАК План"+сч+"
		|	,0 КАК Факт"+сч;
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса+"
    |ИЗ
    |	Справочник.СтатьиДоходовРасходов КАК спр
    |
    |СГРУППИРОВАТЬ ПО
    |	спр.Ссылка
    |
    |УПОРЯДОЧИТЬ ПО
    |	спр.Порядок, Спр.Наименование
    |ИТОГИ ПО
    |	статьяДР ИЕРАРХИЯ";
	

	Запрос.Текст 		= ТекстЗапроса;

	Выборка 			= Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "СтатьяДР");
	
	НовСтр 				= ДеревоБДРФорма.Строки.Добавить();
	НовСтр.СтатьяДР 	= "Нач. остаток";
	НовСтр.ЭтоГруппа 	= Истина;

	Документы.БюджетМесяц.ЗаполнитьДеревоБДРРекурсивноСервер(Выборка, ДеревоБДРФорма);
	
	НовСтр 				= ДеревоБДРФорма.Строки.Добавить();
	НовСтр.СтатьяДР 	= "Кон. остаток";
	НовСтр.ЭтоГруппа 	= Истина;
	
	Для Каждого Стр Из ДеревоБДРФорма.Строки Цикл
		Если ТипЗнч(Стр.СтатьяДР) = Тип("Строка") Тогда
			Продолжить;
		КонецЕсли;
	
		Стр.ПриходРасход = Стр.СтатьяДР.ЗнакДвижения;
	КонецЦикла;

КонецПроцедуры



&НаСервере
Функция ПолучитьОстатокБюджета(Бюджет) Экспорт
	
	ДеревоДляРасчетаОстатка = СоздатьДеревоБюджета();
	
	ЗаполнитьСуществующийБюджет(Бюджет, ДеревоДляРасчетаОстатка);
	
	//вычислим конечный плановый остаток средств
	
	Возврат ДеревоДляРасчетаОстатка.Строки.Получить(ДеревоДляРасчетаОстатка.Строки.Количество()-1)["План32"];
	
КонецФункции

Функция СоздатьДеревоБюджета() Экспорт

	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("СтатьяДР");
	Дерево.Колонки.Добавить("ПриходРасход");
	Дерево.Колонки.Добавить("ЭтоГруппа");
	Для Сч = 1 по 32 Цикл
		Дерево.Колонки.Добавить("План"+сч);
		Дерево.Колонки.Добавить("Факт"+сч);
	КонецЦикла;
	

	Возврат Дерево;
КонецФункции




//Заполняет дерево бюджет фактом или прогнозом с заменой текущих данных или без нее
//Параметры:
//	ПериодМес - дата, для использования в условии запроса
//	ПрогнозИлиФакт - строка "Прогноз" или "Факт" - какое поле брать из выборки
//	Замещать - булево, определяет надо ли замещать текущие данные, даже если в выборке ноль
//Возвращаемое значение:
//	нет
//
&НаСервере
Процедура ЗаполнитьПланПрогнозомСерверМенеджер(ДеревоБДРФорма, ПериодМес, ПрогнозИлиФакт="Прогноз", Замещать = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	БДР.СтатьяДоходовРасходов КАК СтатьяДР,
		|	СУММА(БДР.СуммаФактПрогноз) КАК Прогноз,
		|	СУММА(БДР.СуммаФакт) КАК Факт,
		|	СУММА(БДР.СуммаПлан) КАК План,
		|	СУММА(БДР.СуммаФакт+БДР.СуммаФактПрогноз) КАК ПрогнозФакт,
		|	НАЧАЛОПЕРИОДА(БДР.Период, ДЕНЬ) КАК День
		|ИЗ
		|	РегистрНакопления.БДР КАК БДР
		|ГДЕ
		|	НЕ БДР.Регистратор ССЫЛКА Документ.БюджетГод
		|	И НЕ БДР.Регистратор ССЫЛКА Документ.БюджетМесяц
		|	И БДР.Период МЕЖДУ &НачПериод И &КонПериод
		|	И НЕ БДР.СтатьяДоходовРасходов.ЭтоГруппа
		|
		|СГРУППИРОВАТЬ ПО
		|	БДР.СтатьяДоходовРасходов,
		|	НАЧАЛОПЕРИОДА(БДР.Период, ДЕНЬ)";

	Запрос.УстановитьПараметр("НачПериод", НачалоМесяца(ПериодМес));
	Запрос.УстановитьПараметр("КонПериод", КонецМесяца(ПериодМес));

	Результат = Запрос.Выполнить();

	Выборка = Результат.Выбрать();
	
	тззззззззз = Результат.Выгрузить();

	Пока Выборка.Следующий() Цикл
		
		ПоискСтроки = ДеревоБДРФорма.Строки.Найти(Выборка.СтатьяДР,"СтатьяДР",Истина);
		
		Если ПоискСтроки=Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Замещать Тогда
			ПоискСтроки["План"+День(Выборка.День)]=Выборка[ПрогнозИлиФакт];
		Иначе
			Если Выборка[ПрогнозИлиФакт] <> 0 Тогда
				ПоискСтроки["План"+День(Выборка.День)]=Выборка[ПрогнозИлиФакт];
			КонецЕсли;
		КонецЕсли;
		
		ПоискСтроки["План32"]=0;
		
		Для сч=1 по 31 Цикл
			ПоискСтроки["План32"]=ПоискСтроки["План32"]+ПоискСтроки["План"+сч];
		КонецЦикла;
		
	КонецЦикла;
			
	ОбщийМодуль1Сервер.ПересчитатьИтогиПоГруппамВДеревеБДРВнизСерверРекурсивно2(ДеревоБДРФорма.Строки,32);
	
	Документы.БюджетМесяц.ПересчитатьОстаткиВДеревеБДРСервер(ДеревоБДРФорма);
	
	
	
КонецПроцедуры



&НаСервере
Процедура ОчиститьПланСерверМенеджер(ДеревоБДРФорма) Экспорт
	
	ОбщийМодуль1Сервер.ОчиститьДеревоБДРПланСервер(ДеревоБДРФорма.Строки,32);
	ОбщийМодуль1Сервер.ПересчитатьИтогиПоГруппамВДеревеБДРВнизСерверРекурсивно2(ДеревоБДРФорма.Строки,32);
	//ОбщийМодуль1Сервер.ЗаполнитьПланПоФактуБезОчисткиСервер(ДеревоБДРФорма, НачалоГода(Объект.Дата), КонецГода(Объект.Дата));
	Документы.БюджетМесяц.ПересчитатьОстаткиВДеревеБДРСервер(ДеревоБДРФорма);
	
КонецПроцедуры


&НаСервере
Процедура СохранитьДеревоСерверМенеджер(ДеревоБДРФорма, Объект) Экспорт
	
	Объект.БДР.Очистить();
	Для каждого Стр Из ДеревоБДРФорма.Строки Цикл
		Если ТипЗнч(Стр.СтатьяДР)=Тип("Строка") Тогда//нач ост и кон ост
			Продолжить;
		КонецЕсли;
		СохранитьДеревоРекурсивноСервер(Стр, Объект);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СохранитьДеревоРекурсивноСервер(СтрокаДерева, Объект) Экспорт
	
	Для каждого Стр Из СтрокаДерева.Строки Цикл
		Если Стр.ЭтоГруппа Тогда
			СохранитьДеревоРекурсивноСервер(Стр, Объект);
		Иначе
			Если Стр["План32"]=0 Тогда
				Продолжить;
			КонецЕсли;
			
			НовСтр = Объект.БДР.Добавить();
			НовСтр.СтатьяДР = Стр.СтатьяДР;
			для сч=1 по 31 цикл
				Новстр["план"+сч] = Стр["План"+сч];
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
		
КонецПроцедуры




&НаСервере
Процедура СохранитьБюджетСМенеджер(ДеревоБДРФорма, Объект) Экспорт
	
	Период=Дата( СтрЗаменить(Год(Объект.Дата), Символы.НПП, ""), Строка(Месяц(Объект.Дата)), "1");	
		
	НаборЗаписей = РегистрыНакопления.БДР.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Регистратор.Установить(Объект.Ссылка);

	СохранитьБюджетСРек(Период, ДеревоБДРФорма.Строки, НаборЗаписей);	
	
	НаборЗаписей.Записать();

КонецПроцедуры

&НаСервере
Процедура СохранитьБюджетСРек(Период, СтрокиДереваФормы, НаборЗаписей) Экспорт
	
	
	
	Для Каждого Стр Из СтрокиДереваФормы Цикл
		Если ТипЗнч(Стр.СтатьяДР) = Тип("Строка") Тогда
			Продолжить;
		КонецЕсли;	
		Если НЕ Стр.ЭтоГруппа Тогда
			
			//пропустим строки, в которых Итого - пусто (значит и в других колонках пусто)
			Если Стр.План32 = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			//сразу пишем в регистр накопления БДР
			Запись 							= НаборЗаписей.Добавить();
			Запись.Активность 				= Истина;
			Запись.Период 					= Период;
			Запись.СтатьяДоходовРасходов 	= Стр.СтатьяДР;
			Запись.СуммаПлан 				= Стр["План32"];
			
		КонецЕсли;
		СохранитьБюджетСРек(Период, Стр.Строки, НаборЗаписей);
	КонецЦикла;	
	
КонецПроцедуры


//Параметры
//	Бюджет - годовой
//	ДеревоБДРФорма - дерево месячного бюджета
&НаСервере
Процедура ОбновитьГодовойБюджетСМенеджер(Период, ДеревоБДРФорма, Бюджет) Экспорт
	//месяц в годовом бюджете определяем по дате этого документа (месячного бюджета)
		
	НаборЗаписей = РегистрыНакопления.БДР.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Регистратор.Установить(Бюджет.Ссылка);
	
	НаборЗаписей.Прочитать();
	
	ТЗ = НаборЗаписей.Выгрузить();
	
	ОбновитьГодовойБюджетСРек(Период, ДеревоБДРФорма.Строки, ТЗ);	
	
	ТЗ.ЗаполнитьЗначения(Бюджет, "Регистратор");
	//удалить строки из годового бюджета с нулевыми планами 
	Для сч = -ТЗ.Количество()+1 По 0 Цикл
		Если ТЗ[-сч]["СуммаПлан"]=0 Тогда
			ТЗ.Удалить(-сч);
		КонецЕсли;
	КонецЦикла;
	
	НаборЗаписей.Загрузить(ТЗ);
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

//21 03 14 ОбновитьГодовойБюджетСерверРекурсивно
//обновляет годовой бюджет. рекурсивно обходит строки дерева. вызывается из ОбновитьГодовойБюджетСМенеджер()
//Параметры:
//	Период - 
//	СтрокиДереваФормы - коллекция строк дерева
//	ТЗ
//Возвращаемое значение:
//	Период, СтрокиДереваФормы, ТЗ
//
&НаСервере
Процедура ОбновитьГодовойБюджетСРек(Период, СтрокиДереваФормы, ТЗ)  Экспорт
	
	Для Каждого Стр Из СтрокиДереваФормы Цикл
		Если ТипЗнч(Стр.СтатьяДР) = Тип("Строка") Тогда
			Продолжить;
		КонецЕсли;	
		Если НЕ Стр.ЭтоГруппа Тогда
			//создавать структуру здесь лучше, чем вне цикла и устанавливать значения методом Вставить. так быстрее.
			Рез = ТЗ.НайтиСтроки(Новый Структура("СтатьяДоходовРасходов,Период",Стр.СтатьяДР, Период));
			Если Рез.Количество()=0 Тогда
				//если в годовом бюджете эта статья НЕ найдена (там она нулевая)
				Если Стр.План32 = 0 Тогда
					//то если она и в месячном нулевая - не добавляем
					Продолжить;
				КонецЕсли;				
				Запись 						= ТЗ.Добавить();
			Иначе
				//а если в годовом бюджете эта статья найдена (там она НЕнулевая) - берем найденную строку
				Запись						= Рез[0];
			КонецЕсли;
			Запись.Активность 				= Истина;
			Запись.Период 					= Период;
			Запись.СтатьяДоходовРасходов 	= Стр.СтатьяДР;
			Запись.СуммаПлан 				= Стр["План32"];
			
		КонецЕсли;
		ОбновитьГодовойБюджетСРек(Период, Стр.Строки, ТЗ);
	КонецЦикла;	
	
КонецПроцедуры
