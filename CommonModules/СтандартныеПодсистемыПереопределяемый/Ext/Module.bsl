// Возвращает список процедур-обработчиков обновления библиотеки.
//
// Здесь в алфавитном порядке размещаются только процедуры-обработчики обновления 
// библиотечных подсистем, которые используются в данной конфигурации. 
// Процедуры-обработчики обновления самой конфигурации следует размещать в функции 
// ОбработчикиОбновления общего модуля ОбновлениеИнформационнойБазыПереопределяемый.
//
// Возвращаемое значение:
//   ТаблицаЗначений - описание полей структуры см. в функции
//               ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления() 
//
Функция ОбработчикиОбновленияСтандартныхПодсистем() Экспорт
	
	Обработчики = ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления();
	
	// Подключаются процедуры-обработчики обновления библиотеки
	
	//// АдресныйКлассификатор
	//АдресныйКлассификатор.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец АдресныйКлассификатор
	//
	//// БизнесПроцессыИЗадачи
	//БизнесПроцессыИЗадачиСервер.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец БизнесПроцессыИЗадачи
	//
	//// ВариантыОтчетов
	//ВариантыОтчетов.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец ВариантыОтчетов
	
	// Валюты
	РаботаСКурсамиВалют.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	// Конец Валюты
	
	//// ДатыЗапретаИзменения
	//ДатыЗапретаИзменения.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец ДатыЗапретаИзменения
	//
	//// ДополнительныеОтчетыИОбработки
	//ДополнительныеОтчетыИОбработки.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец ДополнительныеОтчетыИОбработки
	//
	//// КалендарныеГрафики
	//КалендарныеГрафики.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец КалендарныеГрафики
	//
	//// КонтактнаяИнформация
	//УправлениеКонтактнойИнформацией.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец КонтактнаяИнформация
	//
	//// ОбменДанными
	//ОбменДаннымиСервер.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец ОбменДанными
	//
	//// ОбменДанными
	//ОбновлениеКонфигурации.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец ОбменДанными
	//
	//// ПолнотекстовыйПоиск
	//ПолнотекстовыйПоискСервер.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец ПолнотекстовыйПоиск
	//
	//// ПолучениеФайловИзИнтернета
	//ПолучениеФайловИзИнтернета.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец ПолучениеФайловИзИнтернета
	//
	//// Пользователи
	//Пользователи.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец Пользователи
	//
	//// РаботаСПочтовымиСообщениями
	//ЭлектроннаяПочта.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец РаботаСПочтовымиСообщениями
	//
	//// РаботаСФайлами
	//РаботаСФайламиВызовСервера.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец РаботаСФайлами
	//
	//// Свойства
	//УправлениеСвойствами.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец Свойства
	//
	//// УправлениеДоступом
	//УправлениеДоступом.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец УправлениеДоступом
	//
	//// ФизическиеЛица
	//ФизическиеЛица.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец ФизическиеЛица
	//
	//// ЭлектроннаяЦифроваяПодпись
	//ЭлектроннаяЦифроваяПодпись.ЗарегистрироватьОбработчикиОбновления(Обработчики);
	//// Конец ЭлектроннаяЦифроваяПодпись
	
	Возврат Обработчики;
	//Возврат Неопределено;
	
КонецФункции

// Возвращает признак, является ли конфигурация базовой.
//
// Пример реализации:
//  Если конфигурации выпускаются парами, то в имени базовой версии
//  может включаться дополнительное слово "Базовая". Тогда логика
//  определения базовой версии выглядит таким образом:
//
//	Возврат Найти(ВРег(Метаданные.Имя), "БАЗОВАЯ") > 0;
//
// Возвращаемое значение:
//   Булево   - Истина, если конфигурация - базовая.
//
Функция ЭтоБазоваяВерсияКонфигурации() Экспорт

	Возврат Найти(ВРег(Метаданные.Имя), "БАЗОВАЯ") > 0;

КонецФункции
