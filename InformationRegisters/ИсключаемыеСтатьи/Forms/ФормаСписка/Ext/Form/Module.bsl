

&НаКлиенте
Процедура ВариантПриИзменении(Элемент)
	УстановитьОтборПоВариантуИПериоду(Вариант);
КонецПроцедуры

// <Описание процедуры>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура УстановитьОтборПоВариантуИПериоду(Вариант)

	Если ЗначениеЗаполнено(Вариант) Тогда
		Список.Отбор.Элементы.Очистить();
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантБюджета");
	    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	    ЭлементОтбора.Использование = Истина;
	    ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	    ЭлементОтбора.ПравоеЗначение = Вариант;
		
	Иначе
		Список.Отбор.Элементы.Очистить();
	КонецЕсли;                                
	
КонецПроцедуры // УстановитьОтборПоВариантуИПериоду()

&НаКлиенте
Процедура СписокСправочникаНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Копирование;
КонецПроцедуры

&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)

	СтандартнаяОбработка = Ложь;
	Если НЕ ЗначениеЗаполнено(Вариант) Тогда
		Возврат;
	КонецЕсли;

	СписокПеретаскиваниеСервер(ПараметрыПеретаскивания.Значение);
	
КонецПроцедуры

// обработка перетаскивания справа налево
&НаСервере
//Процедура СписокПеретаскиваниеСервер(Массив, Вариант)
Процедура СписокПеретаскиваниеСервер(Массив)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтатьиДоходовРасходов.Ссылка
		|ИЗ
		|	Справочник.СтатьиДоходовРасходов КАК СтатьиДоходовРасходов
		|ГДЕ
		|	СтатьиДоходовРасходов.Ссылка В ИЕРАРХИИ(&Ссылка)
		|	И СтатьиДоходовРасходов.ЭтоГруппа = ЛОЖЬ";

	Запрос.УстановитьПараметр("Ссылка", Массив);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	НаборЗаписей = РегистрыСведений.ИсключаемыеСтатьи.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВариантБюджета.Установить(Вариант);
		
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НаборЗаписей.Отбор.СтатьяДР.Установить(ВыборкаДетальныеЗаписи.Ссылка);
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.ВариантБюджета = Вариант;
		НоваяЗапись.СтатьяДР = ВыборкаДетальныеЗаписи.Ссылка;
		
	КонецЦикла;

	НаборЗаписей.Записать();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры // СписокПеретаскиваниеСервер()


&НаКлиенте
Процедура ОбновитьРС(Команда)
	Элементы.Список.Обновить();
КонецПроцедуры

//обработчик кнопки "<"
&НаКлиенте
Процедура ПеренестиСправаНалево(Команда)

	Если НЕ ЗначениеЗаполнено(Вариант) Тогда
		Возврат;
	КонецЕсли;
	
	ПеренестиСправаНалевоСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПеренестиСправаНалевоСервер()
	
	Ссылка = Элементы.СписокСправочника.ТекущаяСтрока;
	
	СписокПеретаскиваниеСервер(Ссылка);

КонецПроцедуры // ПеренестиСправаНалевоСервер(ЭлСпр)()


//обработчик кнопки ">"
&НаКлиенте
Процедура ПеренестиСлеваНаправо(Команда)
	
	
	ПеренестиСлеваНаправоСервер();
КонецПроцедуры

&НаСервере
Процедура ПеренестиСлеваНаправоСервер()
	
	//Если НЕ ЗначениеЗаполнено(Вариант) Тогда
	//	Возврат;
	//КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ИсключаемыеСтатьи.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.СтатьяДР.Установить(Элементы.Список.ТекущаяСтрока.СтатьяДР);
	НаборЗаписей.Отбор.ВариантБюджета.Установить(Элементы.Список.ТекущаяСтрока.ВариантБюджета);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
    НаборЗаписей.Удалить(0);
	НаборЗаписей.Записать();
	Элементы.Список.Обновить();
	
КонецПроцедуры 

&НаКлиенте
Процедура СписокСправочникаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПеренестиСправаНалево(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПеренестиСлеваНаправо(Неопределено);
КонецПроцедуры


